/*
	Companion js for working with word-building models generated by darmok.py.

	2013 Alex Foran, all rights reserved
*/
Darmok = {
	Bank: function(file) {
		this.NEW_WORD = "EOW";

		var r = new XMLHttpRequest();
		r.open("GET", file, false);
		r.send();
		var raw = JSON.parse(r.responseText);
		this.matrix = raw.data;
		this.segmentLength = raw.segmentLength;

		this.genString = function(min, max, exclusions) {
			var res;
			do {
				res = "";
				var previousLetters = [];
				for (var i=0; i < this.segmentLength; i++) {
					previousLetters.push(this.NEW_WORD);
				}
				do {
					var subMatrix = this.matrix;
					for (var i=0; i < previousLetters.length; i++) {
						subMatrix = subMatrix[previousLetters[i]];
					}
					var sum = 0;
					for (var letter in subMatrix) {
						sum += subMatrix[letter];
					}
					var chosenValue = sum * Math.random();
					var chosenLetter = null;
					sum = 0;
					for (var letter in subMatrix) {
						sum += subMatrix[letter];
						if (sum >= chosenValue) {
							chosenLetter = letter;
							break;
						}
					}
					if (chosenLetter == this.NEW_WORD) {
						break;
					} else {
						res += letter;
						previousLetters.push(letter);
						while (previousLetters.length > this.segmentLength) {
							previousLetters.shift();
						}
					}
				} while (res.length < max)
			} while (res.length < min || res in exclusions);
			return res;
		}
	},

	DEFAULT_MIN: 3,
	DEFAULT_MAX: 32,

	banks: {},

	_get: function(path) {
		if (!this.banks[path]) {
			this.banks[path] = new this.Bank(path);
		}
		return this.banks[path];
	},

	genString: function(bank, min, max, exclusions) {
		min = min || this.DEFAULT_MIN;
		max = max || this.DEFAULT_MAX;
		exclusions = exclusions || [];

		return this._get(bank).genString(min, max, exclusions)
	}
}
